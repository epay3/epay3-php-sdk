<?php
/**
 * CreditCardInformationModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * CreditCardInformationModel Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class CreditCardInformationModel implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'account_holder' => 'string',
        'card_number' => 'string',
        'cvc' => 'string',
        'month' => 'ByteArray',
        'year' => 'int',
        'postal_code' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'account_holder' => 'accountHolder',
        'card_number' => 'cardNumber',
        'cvc' => 'cvc',
        'month' => 'month',
        'year' => 'year',
        'postal_code' => 'postalCode'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'account_holder' => 'setAccountHolder',
        'card_number' => 'setCardNumber',
        'cvc' => 'setCvc',
        'month' => 'setMonth',
        'year' => 'setYear',
        'postal_code' => 'setPostalCode'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'account_holder' => 'getAccountHolder',
        'card_number' => 'getCardNumber',
        'cvc' => 'getCvc',
        'month' => 'getMonth',
        'year' => 'getYear',
        'postal_code' => 'getPostalCode'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $account_holder Name that is on the credit card account.
      * @var string
      */
    protected $account_holder;
    
    /**
      * $card_number Number for the credit card.
      * @var string
      */
    protected $card_number;
    
    /**
      * $cvc Security code for the credit card.
      * @var string
      */
    protected $cvc;
    
    /**
      * $month Month of card expiration.
      * @var ByteArray
      */
    protected $month;
    
    /**
      * $year Year of card expiration.
      * @var int
      */
    protected $year;
    
    /**
      * $postal_code Postal Code for the credit card.
      * @var string
      */
    protected $postal_code;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->account_holder = $data["account_holder"];
            $this->card_number = $data["card_number"];
            $this->cvc = $data["cvc"];
            $this->month = $data["month"];
            $this->year = $data["year"];
            $this->postal_code = $data["postal_code"];
        }
    }
    
    /**
     * Gets account_holder
     * @return string
     */
    public function getAccountHolder()
    {
        return $this->account_holder;
    }
  
    /**
     * Sets account_holder
     * @param string $account_holder Name that is on the credit card account.
     * @return $this
     */
    public function setAccountHolder($account_holder)
    {
        
        $this->account_holder = $account_holder;
        return $this;
    }
    
    /**
     * Gets card_number
     * @return string
     */
    public function getCardNumber()
    {
        return $this->card_number;
    }
  
    /**
     * Sets card_number
     * @param string $card_number Number for the credit card.
     * @return $this
     */
    public function setCardNumber($card_number)
    {
        
        $this->card_number = $card_number;
        return $this;
    }
    
    /**
     * Gets cvc
     * @return string
     */
    public function getCvc()
    {
        return $this->cvc;
    }
  
    /**
     * Sets cvc
     * @param string $cvc Security code for the credit card.
     * @return $this
     */
    public function setCvc($cvc)
    {
        
        $this->cvc = $cvc;
        return $this;
    }
    
    /**
     * Gets month
     * @return ByteArray
     */
    public function getMonth()
    {
        return $this->month;
    }
  
    /**
     * Sets month
     * @param ByteArray $month Month of card expiration.
     * @return $this
     */
    public function setMonth($month)
    {
        
        $this->month = $month;
        return $this;
    }
    
    /**
     * Gets year
     * @return int
     */
    public function getYear()
    {
        return $this->year;
    }
  
    /**
     * Sets year
     * @param int $year Year of card expiration.
     * @return $this
     */
    public function setYear($year)
    {
        
        $this->year = $year;
        return $this;
    }
    
    /**
     * Gets postal_code
     * @return string
     */
    public function getPostalCode()
    {
        return $this->postal_code;
    }
  
    /**
     * Sets postal_code
     * @param string $postal_code Postal Code for the credit card.
     * @return $this
     */
    public function setPostalCode($postal_code)
    {
        
        $this->postal_code = $postal_code;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
